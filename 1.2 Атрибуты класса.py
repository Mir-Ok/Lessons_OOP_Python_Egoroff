''' Класс - это шаблон для создания объектов, описывает какие данные мы будем хранить, каким
    поведением наделены объекты

    Атрибуты класса и атрибуты экземпляра класса - это не одно и то же! '''


# данные, которые мы закладываем внутрь класса - это обычные переменные. Они станут атрибутами класса

class Person:  # определеляем без ()
    name = 'Ivan'
    age = 30


# --- обращаемся к атрибутам класса

print(Person.name)  # --> Ivan
print(Person.age)   # --> 30
# print(Person.x)   # --> AttributeError: type object 'Person' has no attribute 'x'

# Как узнать все атрибуты класса? Магический метод __dict__

print(Person.__dict__)  # -- > {'__module__': '__main__', 'name': 'Ivan', 'age': 30,
                        # '__dict__': <attribute '__dict__' of 'Person' objects>,
                        # '__weakref__': <attribute '__weakref__' of 'Person' objects>,
                        # '__doc__': None}

# --- Обращаеимся к, проверяем наличие атрибута и дополняем, если нет - функция getattr(). Класс, атрибут, чем заполнить если не было

print(getattr(Person, 'x', 100))     # --> 100
print(getattr(Person, 'name', 100))  # --> Ivan замены не будет, так как уже есть такой аттрибут

# --- Изменение значения аттрибута, обращаемся к атрибуту и присваиваем ему новое значение

Person.name = 'Misha'
print(Person.name)  # --> Misha, изменилось

# --> Попробуем изменить несуществующий атрибут

Person.x = 'Ur'  # --> Питон динамически его создаст
print(Person.__dict__)  # --> аналогично выше, плюс 'x': 'Ur'
Person.x = [1, 2, 3]  # -->  это вызовет перезапись уже имеющегося атрибута

# --- Установка значений атрибута - через встроенную функцию setattr(object, name, value) - куда, что и какой

setattr(Person, 'y', 200)
print(Person.y)  # --> 200

# Как удалить аттрибут? Попытка удалить несуществующий вызовет ошибку

del Person.x
print(Person.__dict__)  # аттрибут 'x' пропал из списка

delattr(Person, 'name')
print(Person.__dict__)  # аттрибут 'name' пропал из списка

# --- Встроенная функция для удаления атрибута - delattr()
delattr(Person, 'y')
print(Person.__dict__)  # аттрибут 'y' пропал из списка

''' Важно! Выше речь была именно про атрибуты класса. Мы по имени класса к ним и обращались, напрмую Person.y, 
    а не через экземпляры '''

# Обращение к классу через () называется вызовом класса, и результат этого вызова можно положить в переменную
e = Person()  # в консоли видно, что вновь созданная переменная уже имеет атрибуты

''' Как аттрибуты класса сказываются на аттрибутах экземпляров класса? 

    При добавлении новых атрибутов класса, они появляются даже у тех экземпляров класса, 
    что были объявлены ранее.
    Аналогично при удалении или изменении атрибута. '''

Person.z = 100  # --> после этого у созданных ранее экземпляров класса появятся новые атрибуты, аналогично с удалением,
# изменением

''' !!! Если аттрибут создается не у класса, а у его экземпляра, то это не затронет другие экземпляры '''

