''' Расширение - это для потомков '''

class Person:

    def breathe(self):  # доступно и этому классу, и потомку
        print('Доктор дышит')

class Doctor(Person):

    def sleep(self):  # доступно только для дочернего класса
        print('Доктор спит')

p = Person()
d = Doctor()

d.breathe()  # --> Доктор дышит
p.breathe()  # --> Доктор дышит
d.sleep()    # --> Доктор спит
# p.sleep()  # --> даже подсказки нет AttributeError: 'Person' object has no attribute 'sleep'

''' Понимаем разницу: если мы в потомке пропишем класс с аналогичным родителю
    названием, но измененным функционаом - это переопределение 
    
    Расширение (extending) - когда потомок дополнительно имеет метод, кот. нет у родителя
    
    Когда потомок обращается к родителю, если нет у себя
    такого метода, но метод получит в аргумент экземпляр-ребенок и все метолы
    будет изначально искать в потомке, и только потом в родителе '''