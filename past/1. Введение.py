''' Объект в программировании - контейнер, состоящий из данных и состояния, поведения.
    Данные в дальнейшем будем называть атрибутами,
    Поведение - методы объекта

    Например, список a = [2,3,4].
    Данные здесь сами элементы списка, а поведение - методы списков.
    Варианты поведения, т.о. ограничены, потому что методы строк здесь уже не сработают.

    Пример: объект птица имеет метод "летать", объект гепард имеет метод "бегать"

    '''


''' Экземпляры классов
    Функцией type() определяем, к какому классу относится переменная (строки, списки, кортежи ...)
    Все объекты относятся к какому-то классу, бесхозных нет.
    
    У каждого класса есть множество экземпляров, которые ему принадлежат:
    - int содержит все целые числа
    - list любые значения, но в [] 
    - ...
'''

# проверяем функцией isinstance(), принадлежит ли элемент классу
print(isinstance(4, int))  # --> True
print(isinstance(4, float))  # --> False

print(isinstance(list, object))  # --> True всегда, все является объектом

''' Класс - это шаблон, при помощи которого мы будем создавать объекты.
    В Python есть множество встроенных (int, float ...)
    
    Каждый раз когда мы создаем объект и определенным образом его маркируем ([],(),{}).
    то за кулисами он наделяется средой определенным поведением. Ему присваиваются определенны методы,
    соотв. его классу.
    
    В этому курсе мы будем учится создавать свои классы и наделять его объекты нужным нам поведением
    
    '''

# создаем класс, пока без описания поведения

class Car:
    pass

a = Car()  # таким образом мы создаем переменную класса, в консоли видна принадлежность
print(type(a))  # --> <class '__main__.Car'>
b = Car()  # создадим еще один объект класса, их может быть сколько угодно


# переопределим класс

# создаем класс, пока без описания поведения

class Car:
    model = 'BMW'
    engine = 1.6

c = Car()  # в консоли в описании объект сразу с атрибутами
d = Car()

