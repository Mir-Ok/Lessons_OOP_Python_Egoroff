class Car:  # все атрибуты класса доступны через экземпляры
    model = 'BMW'
    engine = 1.6

# Результат вызова класса - экземпляр класса, помещенный в переменную, создадим парочку
a1 = Car()
a2 = Car()

# Убедимся, что экземпляры  имеют те же атрибуты
print(a1.model)  # --> BMW
print(a2.engine)  # --> 1.6

# --- А сейчас немного различий ---

print(Car.__dict__)  # посмотрим атрибуты класса
''' Результат
mappingproxy({'__module__': '__main__', 'model': 'BMW', 'engine': 1.6,
              '__dict__': <attribute '__dict__' of 'Car' objects>,
              '__weakref__': <attribute '__weakref__' of 'Car' objects>,
              '__doc__': None})
              '''

print(a1.__dict__)  # посмотрим атрибуты экземпляра класса
''' Результат
{}
'''

# Это происходит потому что нет атрибутов, созданных именно для экземпляров, только унаследованные. Изменим это:
a1.seat = 4  # присвоим экземпляру атрибут.
print(a1.__dict__)  # --> {'seat': 4}
print(a2.__dict__)  # --> {}

''' Важно, что у других экземпляров этого класса он не появится, и у самого класса его не будет '''

a1.model = 'Lada'    # изменим вручную у экземпляра атрибут, который он унаследовал от класса
print(a1.__dict__)   # --> {'seat': 4, 'model': 'Lada'}
print(a2.__dict__)   # --> {}
print(Car.__dict__)  # аналогично выше, без изменений

''' Обратим внимание, что измененный атрибут класса теперь входит в атрибуты экземпляра класса, становится локальным  '''

''' У класса существует пространство имен. Грубо говоря - пространство имен экземпляра локально, оно внутри глобального
    пространства имен класса. И при поиске значения атрибута, Питон ищет сначала локально, а после на уровень выше.
    Поэтому все изменения от исходного сохраняются в локальном пространстве имен.
    Неизмененные атрибуты экземпляра легко найдутся у его класса '''

''' Если мы сначала изменим атрибут, унаследованный экземплятом, то его поместит его новое значение в локальное 
    пространство имен атрибута класса. И если мы его оттуда удалим, то все равно сможем к этому атрибуту обращаться, 
    подтянется дефолтное значение из класса '''